# vim: set expandtab shiftwidth=2 tabstop=8 textwidth=0:
#
# THIS FILE IS GENERATED, DO NOT EDIT

variables:
  FDO_DISTRIBUTION_PACKAGES: 'wget curl'
  FDO_DISTRIBUTION_EXEC: './test/script.sh'


################################################################################
#
# Centos checks
#
################################################################################


#
# A few templates to avoid writing the image and stage in each job
#
.centos:ci@container-build:
  extends: .fdo.container-build@centos
  image: $CI_REGISTRY_IMAGE/buildah:$BOOTSTRAP_TAG
  stage: centos_container_build
  needs:
    - bootstrap
    - sanity check


.centos:ci@container-ifnot-exists:
  extends: .fdo.container-ifnot-exists@centos
  image: $CI_REGISTRY_IMAGE/buildah:$BOOTSTRAP_TAG
  stage: centos_container_build
  needs:
    - bootstrap
    - sanity check


#
# generic centos checks
#
.centos@check:
  stage: centos_check
  script:
      # run both curl and wget because one of those two is installed and one is
      # in the base image, but it depends on the distro which one
    - curl --insecure https://gitlab.freedesktop.org
    - wget --no-check-certificate https://gitlab.freedesktop.org
      # make sure our test script has been run
    - if [[ -e /test_file ]] ;
      then
        echo $FDO_DISTRIBUTION_EXEC properly run ;
      else
        exit 1 ;
      fi


#
# straight centos build and test
#
centos:7@container-build:
  extends: .centos:ci@container-build
  variables:
    FDO_DISTRIBUTION_VERSION: '7'
    FDO_DISTRIBUTION_TAG: $CI_PIPELINE_ID


centos:7@check:
  extends: .centos@check
  image: $CI_REGISTRY_IMAGE/centos/7:$CI_PIPELINE_ID
  needs:
    - centos:7@container-build
    - sanity check


#
# /cache centos check (in build stage)
#
centos@cache-container-build:
  extends: .centos:ci@container-build
  before_script:
      # The template normally symlinks the /cache
      # folder, but we want a fresh new one for the
      # tests.
    - mkdir runner_cache_$CI_PIPELINE_ID
    - uname -a | tee runner_cache_$CI_PIPELINE_ID/foo-$CI_PIPELINE_ID

  artifacts:
    paths:
      - runner_cache_$CI_PIPELINE_ID/*
    expire_in: 1 week

  variables:
    FDO_DISTRIBUTION_VERSION: '7'
    FDO_DISTRIBUTION_TAG: cache-$CI_PIPELINE_ID
    FDO_DISTRIBUTION_EXEC: 'bash test/test_cache.sh $CI_PIPELINE_ID'
    FDO_CACHE_DIR: $CI_PROJECT_DIR/runner_cache_$CI_PIPELINE_ID


#
# /cache centos check (in check stage)
#
centos@cache-check:
  stage: centos_check
  image: alpine:latest
  script:
    # in the previous stage (centos@cache-container-build),
    # test/test_cache.sh checked for the existance of `/cache/foo-$CI_PIPELINE_ID`
    # and if it found it, it wrote `/cache/bar-$CI_PIPELINE_ID`.
    #
    # So if we have in the artifacts `bar-$CI_PIPELINE_ID`, that means
    # 2 things:
    # - /cache was properly mounted while building the container
    # - the $FDO_CACHE_DIR has been properly written from within the
    #   building container, meaning the /cache folder has been successfully
    #   updated.
    - if [ -e $CI_PROJECT_DIR/runner_cache_$CI_PIPELINE_ID/bar-$CI_PIPELINE_ID ] ;
      then
        echo Successfully read/wrote the cache folder, all good ;
      else
        echo FAILURE while retrieving the previous artifacts ;
        exit 1 ;
      fi
  needs:
    - job: centos@cache-container-build
      artifacts: true
    - sanity check


#
# make sure we do rebuild the image if the tag does not exist and check
#
centos-forced:7@container-ifnot-exists:
  extends: .centos:ci@container-ifnot-exists
  variables:
    FDO_UPSTREAM_REPO: $CI_PROJECT_PATH
    FDO_DISTRIBUTION_VERSION: '7'
    FDO_DISTRIBUTION_TAG: $CI_PIPELINE_IID


centos-forced-ifnot-exists:7@check:
  extends: .centos@check
  image: $CI_REGISTRY_IMAGE/centos/7:$CI_PIPELINE_IID
  needs:
    - centos-forced:7@container-ifnot-exists
    - sanity check


#
# make sure we do not rebuild the image if the tag exists (during the check)
#
centos:7@container-ifnot-exists:
  extends: .centos:ci@container-ifnot-exists
  stage: centos_check
  variables:
    FDO_UPSTREAM_REPO: $CI_PROJECT_PATH
    FDO_DISTRIBUTION_VERSION: '7'
    FDO_DISTRIBUTION_TAG: $CI_PIPELINE_IID
    FDO_DISTRIBUTION_PACKAGES: 'this-package-should-not-exist'
  needs:
    - centos-forced:7@container-ifnot-exists
    - sanity check


#
# make sure we do not rebuild the image if the tag exists in the upstream
# repository (during the check)
# special case where FDO_REPO_SUFFIX == ci_templates_test_upstream
#
centos:7-upstream@container-ifnot-exists:
  extends: .centos:ci@container-ifnot-exists
  stage: centos_check
  variables:
    FDO_UPSTREAM_REPO: $CI_PROJECT_PATH
    FDO_REPO_SUFFIX: ci_templates_test_upstream
    FDO_DISTRIBUTION_VERSION: '7'
    FDO_DISTRIBUTION_TAG: $CI_PIPELINE_IID
    FDO_DISTRIBUTION_PACKAGES: 'this-package-should-not-exist'
  needs:
    - centos-forced:7@container-ifnot-exists
    - sanity check

#
# Try our centos scripts with other versions and check
#

centos:8@container-build:
  extends: .centos:ci@container-build
  variables:
    FDO_DISTRIBUTION_VERSION: '8'
    FDO_DISTRIBUTION_TAG: $CI_PIPELINE_ID

centos:8@check:
  extends: .centos@check
  image: $CI_REGISTRY_IMAGE/centos/8:$CI_PIPELINE_ID
  needs:
    - centos:8@container-build
    - sanity check

# vim: set expandtab shiftwidth=2 tabstop=8 textwidth=0:

variables:
  ALPINE_PKGS: 'wget'
  ALPINE_EXEC: '.hidden_dir/test.sh /test_file'


################################################################################
#
# Alpine checks
#
################################################################################


#
# A few templates to avoid writing the image and stage in each job
#
.alpine:ci@container-build:
  extends: .alpine@container-build
  image: $CI_REGISTRY_IMAGE/buildah:$BOOTSTRAP_TAG
  stage: alpine_container_build
  needs:
    - "bootstrap"


.alpine:ci@container-ifnot-exists:
  extends: .alpine@container-ifnot-exists
  image: $CI_REGISTRY_IMAGE/buildah:$BOOTSTRAP_TAG
  stage: alpine_container_build
  needs:
    - "bootstrap"


.alpine:ci@container-build@arm64v8:
  extends: .alpine@container-build@arm64v8
  image: $CI_REGISTRY_IMAGE/arm64v8/buildah:$BOOTSTRAP_TAG
  stage: alpine_container_build
  needs:
    - "bootstrap@arm64v8"


.alpine:ci@container-ifnot-exists@arm64v8:
  extends: .alpine@container-ifnot-exists@arm64v8
  image: $CI_REGISTRY_IMAGE/arm64v8/buildah:$BOOTSTRAP_TAG
  stage: alpine_container_build
  needs:
    - "bootstrap@arm64v8"

#
# generic alpine checks
#
.alpine@check:
  stage: alpine_check
  script:
      # make sure wget has been installed
    - wget https://gitlab.freedesktop.org
      # make sure our test script has been run
    - if [[ -e /test_file ]] ;
      then
        echo $ALPINE_EXEC properly run ;
      else
        exit 1 ;
      fi


#
# straight alpine build and test
#
alpine:latest@container-build:
  extends: .alpine:ci@container-build
  variables:
    ALPINE_TAG: $CI_PIPELINE_ID


alpine:latest@check:
  extends: .alpine@check
  image: $CI_REGISTRY_IMAGE/alpine/latest:$CI_PIPELINE_ID
  needs:
    - alpine:latest@container-build


alpine:latest@container-build@arm64v8:
  extends: .alpine:ci@container-build@arm64v8
  variables:
    ALPINE_TAG: arm64v8-$CI_PIPELINE_ID


alpine:latest@check@arm64v8:
  extends: .alpine@check
  image: $CI_REGISTRY_IMAGE/alpine/latest:arm64v8-$CI_PIPELINE_ID
  tags:
    - aarch64
  needs:
    - alpine:latest@container-build@arm64v8


#
# make sure we do rebuild the image if the tag does not exist and check
#
alpine-forced:latest@container-ifnot-exists:
  extends: .alpine:ci@container-ifnot-exists
  variables:
    UPSTREAM_REPO: $CI_PROJECT_PATH
    ALPINE_TAG: $CI_PIPELINE_IID


alpine-forced-ifnot-exists:latest@check:
  extends: .alpine@check
  image: $CI_REGISTRY_IMAGE/alpine/latest:$CI_PIPELINE_IID
  needs:
    - alpine-forced:latest@container-ifnot-exists


#
# make sure we do not rebuild the image if the tag exists (during the check)
#
alpine:latest@container-ifnot-exists:
  extends: .alpine:ci@container-ifnot-exists
  stage: alpine_check
  variables:
    UPSTREAM_REPO: $CI_PROJECT_PATH
    ALPINE_TAG: $CI_PIPELINE_IID
    ALPINE_PKGS: 'this-package-should-not-exist'
  needs:
    - alpine-forced:latest@container-ifnot-exists


#
# make sure we do not rebuild the image if the tag exists in the upstream
# repository (during the check)
# special case where REPO_SUFFIX == ci_templates_test_upstream
#
alpine:latest-upstream@container-ifnot-exists:
  extends: .alpine:ci@container-ifnot-exists
  stage: alpine_check
  variables:
    UPSTREAM_REPO: $CI_PROJECT_PATH
    REPO_SUFFIX: ci_templates_test_upstream
    ALPINE_TAG: $CI_PIPELINE_IID
    ALPINE_PKGS: 'this-package-should-not-exist'
  needs:
    - alpine-forced:latest@container-ifnot-exists
